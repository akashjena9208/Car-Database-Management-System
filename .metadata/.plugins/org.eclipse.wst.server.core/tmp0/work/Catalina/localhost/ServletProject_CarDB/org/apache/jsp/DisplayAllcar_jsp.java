/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2025-02-25 17:47:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;

public final class DisplayAllcar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.ResultSet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>All Cars</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("  /* Background Styling */\r\n");
      out.write("  body {\r\n");
      out.write("    background-image: url(\"https://images.unsplash.com/photo-1498887960847-2a5e46312788?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mjd8fGNhcnxlbnwwfHwwfHx8MA%3D%3D\");\r\n");
      out.write("    background-size: cover;\r\n");
      out.write("    background-repeat: no-repeat;\r\n");
      out.write("   /*  background-position: center; */\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    font-family: 'Arial', sans-serif;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* Table Styling */\r\n");
      out.write("  .car-table {\r\n");
      out.write("    width: 80%;\r\n");
      out.write("    margin: 50px auto;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("    backdrop-filter: blur(10px);\r\n");
      out.write("    background: rgba(255, 255, 255, 0.15);\r\n");
      out.write("    border-radius: 12px;\r\n");
      out.write("    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .car-table th, .car-table td {\r\n");
      out.write("    padding: 12px;\r\n");
      out.write("    border: 2px solid rgba(255, 255, 255, 0.3);\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .car-table th {\r\n");
      out.write("    background-color: rgba(255, 165, 0, 0.6);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .car-table tr:hover {\r\n");
      out.write("    background-color: rgba(255, 255, 255, 0.2);\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* Stylish buttons */\r\n");
      out.write("  .btn {\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    padding: 8px 12px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .update-btn {\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .update-btn:hover {\r\n");
      out.write("    background-color: #45a049;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .delete-btn {\r\n");
      out.write("    background-color: #ff3333;\r\n");
      out.write("    color: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .delete-btn:hover {\r\n");
      out.write("    background-color: #cc0000;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* Go Back Button */\r\n");
      out.write("  .back-link {\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    background: #ffa500;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    color: black;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .back-link:hover {\r\n");
      out.write("    background: #ff7700;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 ResultSet rs = (ResultSet) request.getAttribute("carList"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Table with Improved UI -->\r\n");
      out.write("<table class=\"car-table\">\r\n");
      out.write("  <tr>\r\n");
      out.write("    <th>Car ID</th>\r\n");
      out.write("    <th>Model</th>\r\n");
      out.write("    <th>Brand</th>\r\n");
      out.write("    <th>Color</th>\r\n");
      out.write("    <th>Price</th>\r\n");
      out.write("    <th>Update</th>\r\n");
      out.write("    <th>Delete</th>\r\n");
      out.write("  </tr>\r\n");
      out.write("\r\n");
      out.write("  ");
 while(rs.next()) { 
      out.write("\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>");
      out.print( rs.getInt(1) );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( rs.getString(2) );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( rs.getString(3) );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( rs.getString(4) );
      out.write("</td>\r\n");
      out.write("    <td>â‚¹");
      out.print( rs.getInt(5) );
      out.write("</td>\r\n");
      out.write("    <td><a href=\"find-car-by-id?carId=");
      out.print( rs.getInt(1) );
      out.write("\" class=\"btn update-btn\">Update</a></td>\r\n");
      out.write("    <td><a href=\"dlt-car-by-id?carId=");
      out.print( rs.getInt(1) );
      out.write("\" class=\"btn delete-btn\">Delete</a></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  ");
 } 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<!-- Go Back to Dashboard -->\r\n");
      out.write("<h2><a href=\"index.jsp\" class=\"back-link\">Go Back to Dashboard</a></h2>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
